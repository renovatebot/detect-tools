name: Build

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches:
      - main

  push:
    branches:
      - main
      - next
      - maint/**

  merge_group:

  workflow_dispatch:
    inputs:
      dryRun:
        description: 'Dry-Run'
        default: 'true'
        required: false

env:
  # are we on a release branch?
  DO_REALEASE: ${{ github.ref_name == github.event.repository.default_branch || github.ref_name == 'next' || startsWith(github.ref_name, 'maint/')}}
  DRY_RUN: true

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-24.04

    steps:
      - uses: containerbase/internal-tools/setup@550687e33edff17a247705e9bef4e6b2078e1f82 # v3.13.7
        with:
          save-cache: true

      - run: pnpm build

      - run: pnpm eslint -f gha

      # TODO: add prettier
      # - run: pnpm prettier

  test:
    strategy:
      matrix:
        os:
          - ubuntu
          - macos
          - windows
        node:
         - 18
        include:
            # too slow and too many tests to run them on all os
          - os: ubuntu
            node: 20
          - os: ubuntu
            node: 22
          - os: ubuntu
            node: 24

    runs-on: ${{ matrix.os }}-latest

    name: test-${{ matrix.os }}-${{ matrix.node }}

    steps:
      - uses: containerbase/internal-tools/setup@550687e33edff17a247705e9bef4e6b2078e1f82 # v3.13.7
        with:
          save-cache: true
          node-version: ${{ matrix.node }}

      - name: Test
        run: pnpm test
        shell: bash

      - name: Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.node == '18'
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results to Codecov
        if: true != cancelled()
        uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1.1.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  # Catch-all required check for test matrix
  success:
    needs:
      - lint
      - test
    runs-on: ubuntu-24.04
    timeout-minutes: 1
    if: always()
    steps:
      - name: Fail for failed or cancelled lint tests
        if: |
          needs.lint.result == 'failure' ||
          needs.lint.result == 'cancelled'
        run: exit 1

      - name: Fail for failed or cancelled test tests
        if: |
          needs.test.result == 'failure' ||
          needs.test.result == 'skipped'
        run: exit 1

  release:
    needs:
      - success

    if: github.repository == 'renovatebot/detect-tools' && github.event_name != 'pull_request'

    runs-on: ubuntu-24.04
    timeout-minutes: 10

    permissions:
      contents: write
      issues: write
      id-token: write

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0 # zero stands for full checkout, which is required for semantic-release
          filter: blob:none # we don't need all blobs, only the full tree
          show-progress: false

      - uses: containerbase/internal-tools/setup@550687e33edff17a247705e9bef4e6b2078e1f82 # v3.13.7
        with:
          checkout: false

      - name: Check dry run
        run: |
          if [[ "${{github.event_name}}" == "workflow_dispatch" && "${{ github.event.inputs.dryRun }}" != "true"  ]]; then
            echo "DRY_RUN=false" >> "$GITHUB_ENV"
          elif [[ "${{env.DO_REALEASE}}" == "true" ]]; then
            echo "DRY_RUN=false" >> "$GITHUB_ENV"
          fi

      - run: pnpm build

      - name: semantic-release
        run: |
          pnpm semantic-release --dry-run ${{env.DRY_RUN}}
        env:
          GITHUB_TOKEN: ${{ github.token }}
